openapi: 3.0.3
info:
  title: WASAtext API specification
  description: |-
    Questo documento OpenApi descrive le API necessarie a WASAText.
  version: "1"
tags:
  - name:  "Login"
    description:
      parte della api che gestisce il login degli utenti
  - name: "Schermata principale"
    description: |-
      parte della api che gestisce la schermata principale dell'app,
      nella schermata principale sono visualizzate le chat in ordine cronologico
      inverso.
  - name: "Chat"
    description: |-
      parte della api che gestisce le chat
  - name: "Modifica Profilo utente"
    description: |-
      sezione della api che gestisce le impostazioni utente
  - name: "Modifica gruppo"
    description: 
      sezione della api che gestisce le impostazioni dei gruppi
paths:
  /wasachat:
    post:
      tags: ["Login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Maria.3"
                  pattern: 'ˆ.*?$'
                  minLength: 3
                  maxLength: 16
                  description:
                    nome utente
              description:
                oggetto nome utente
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:  
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "abcdef012345"
                    description: 
                      identificatore
                description:
                  identificatore in forma di stringa alfanumerica
  /wasachat/{nickname}/impostazioni/impostazioninickname:
    parameters:
      - name: nickname
        in: path
        required: true
        description: è il nickname dell'utente chiamante
        schema:
          type: string
          example: "daromacarlo"
    put:
      tags: ["Modifica Profilo utente"]
      summary: Settare user name
      description: |-
        Questo endpoint permette di aggiornare il nome utente per un utente specifico.
        Se il nome è già in uso o l'utente non esiste l'azione viene abortitita.
      operationId: setMyUserName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  minLength: 1
                  example: "daromacarlo"
      responses:
        "200":
          description: Il nuovo username è uguale al vecchio, nessuna modifica applicata.
        "201":
          description: Il nuovo username è stato settato con successo.
        "400":
          description: "Errore lato client, la richiesta non è valida (ad esempio: username troppo corto)."
        "500":
          description: Errore lato server, si è verificato un problema imprevisto durante l'elaborazione della richiesta.
  /wasachat/{nickname}/impostazioni/impostazioniimmagineprofilo:
    put:
      tags: ["Modifica Profilo utente"]
      summary: Settare o aggiornare la foto profilo
      description: |-
        Questo endpoint permette di settare o aggiornare la foto profilo per un utente specifico.
        Se l'utente ha già una foto profilo, questa viene sovrascritta con quella nuova fornita.
        L'immagine deve essere inviata come file binario utilizzando il tipo `multipart/form-data`.
      operationId: setMyPhoto
      parameters:
        - name: nickname
          in: path
          required: true
          description: Il nickname dell'utente di cui modificare la foto profilo.
          schema:
            type: string
            example: "daromacarlo"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
                  description: La nuova foto profilo da caricare in formato binario. Deve essere fornita tramite un file.
      responses:
        "201":
          description: Foto profilo settata.
        "400":
          description: Errore lato client. Controllare che i parametri forniti siano corretti.
        "500":
          description: Errore lato server. Controllare i log per ulteriori dettagli
  /wasachat/persone/{userid}:
    parameters:
    - name: userid
      in: path
      required: true
      description: è l'id dell'utente
      schema:
        type: number
        example: 131
    post:
      tags: ["Chat"]
      summary: 
        aggiunge l'utente a un gruppo
      description: |-
        aggiunge l'utente al gruppo selezionato
      operationId:
        addToGroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idgruppo:
                  type: number
                  example: 1234
      responses:
        "200": 
          description:
            utente aggiunto correttamente al gruppo
  /wasachat/{nickname}/chats:
    parameters:
    - name: nickname
      in: path
      required: true
      description: è il nickname dell'utente chiamante
      schema:
        type: string
        example: "daromacarlo"
    get:
      tags: ["Schermata principale"]
      summary: "Visualizza conversazioni"
      description: |-
        Restituisce al client la lista delle sue conversazioni
        in ordine cronologico inverso.
      operationId: getMyConversation
      responses:
        "200":
          description: Schermata principale visualizzata correttamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversazioni:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 
                            id della conversazione
                        foto:
                          type: string
                          format: binary
                          description: 
                            Foto profilo utente/foto gruppo
                        nome:
                          type: string
                          example: "informatica 2024-2025"
                        ultimoMessaggio:
                          type: object
                          properties:
                            dataOra:
                              type: string
                              format: date-time
                              description: 
                                Data e ora dell'ultimo messaggio
                            spunta:
                              type: string
                              enum:
                                - "ricevuto"
                                - "letto"
                            contenuto:
                              oneOf:
                                - type: string
                                  description: 
                                    Il contenuto del messaggio come testo
                                - type: string
                                  format: binary
                                  description: 
                                    Il contenuto del messaggio come immagine (in formato binario)
                          required:
                            - spunta
                required:
                  - conversazioni 
        "400":
          description: Errore lato client
        "500":
          description: Errore lato server
  /wasachat/chats/{chatid}:
    parameters:
      - name: chatid
        in: path
        required: true
        description: è l'id della chat
        schema:
          type: number
          example: 131
    get:
      tags: ["Chat"]
      summary:
        restituisce i messaggi della chat
      description: |-
        restituisce i messaggi scambiati nella chat in ordine 
        cronologico inverso
      operationId:
        getConversation
      responses:
        "200":
          description: Chat restituita correttamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        dataOra:
                          type: string
                          format: date-time
                          description:
                            data in cui viene inviato il messaggio
                        spunta:
                          type: string
                          enum:
                            - "ricevuto"
                            - "letto"
                          description: 
                            stato del messaggio
                        contenuto:
                          oneOf:
                            - type: string
                              description: "Il contenuto del messaggio come testo"
                              example: "AO"
                            - type: string
                              format: binary
                              description: "Il contenuto del messaggio come immagine"
                      required:
                        - spunta
                required:
                  - messages  # Rende obbligatorio l'array "messages"
        "400":
          description:
            errore lato client
    post:
      tags: ["Chat"]
      summary:
        invia il messaggio 
      description: |-
        invia nella chat selezionata il messaggio scritto
      operationId:
        sendMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messaggio:
                  oneOf:
                    - type: string
                      description: "Il contenuto del messaggio come testo"
                      example: "ti va di uscire insieme questo venerdì?"
                    - type: string
                      format: binary
                      description: "Il contenuto del messaggio come immagine (in formato binario)"
      responses:
        "200": 
          description: 
            messaggio inviato
        "400": 
          description:
            messaggio non inviato causa problematiche lato client
        "500":
          description:
            messaggio non inviato causa problematiche lato server
  /wasachat/chats/{chatid}/messaggio:
    parameters:
      - name: chatid
        in: path
        required: true
        description: è l'id della chat
        schema:
          type: number
          example: 421
    post:
      tags: ["Chat"]
      summary:
        inoltra il messaggio 
      description: |-
        invia nella chat selezionata il messaggio selezionato
      operationId:
        forwardMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messageid:
                  type: number
                  example: 12
                  description: id del messaggio
              description: lo schema contiene un oggetto che rappresenta l'id del messaggio
      responses:
        "200": 
          description: 
            messaggio inoltrato
        "400": 
          description:
            messaggio non inoltrato causa problematiche lato client
        "500":
          description:
            messaggio non inoltrato causa problematiche lato server
    delete:
      tags: ["Chat"]
      summary:
        elimina il messaggio
      description:
        elimina il messaggio selezionato
      operationId: 
        deleteMessage
      responses:
        "200":
          description: messaggio eliminato correttamente
  /wasachat/{groupid}:
    parameters:
      - name: groupid
        in: path
        required: true
        description: è l'id del gruppo
        schema:
          type: number
          example: 2 
    put:
      tags: ["Chat"]
      summary: commentare messaggio
      description: aggiungere un commento al messaggio selezionato
      operationId: CommentMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contenuto:
                  oneOf:
                  - type: string
                    description: "Il contenuto del messaggio come testo"
                    example: "AO"
                  - type: string
                    format: binary
                    description: "Il contenuto del messaggio come immagine (in formato binario)"
                  description: il mesasggio può essere un messaggio testuale o una foto
              description: |-
                Lo schema contiene il messaggio, questo può essere
                una immagine o un messaggio testuale
      responses:
        "200": 
          description: messaggio commentato
    delete:
      tags: ["Chat"]
      summary: rimuovere commento messaggio
      description: elimina il commento sul messaggio selezionato
      operationId: deleteComment
      responses:
        "200": 
          description: messaggio commentato
    post:
      tags: ["Chat"]
      summary: uscire dal gruppo
      description: uscire dal gruppo selezionato
      operationId: leaaveGroup
      responses:
        "200":
          description: sei uscito correttamente dal gruppo
  /wasachat/{groupid}/impostazioni/nomegruppo:
    parameters:
      - name: groupid
        in: path
        required: true
        description: è l'id del gruppo
        schema:
          type: number
          example: 2
    put:
      tags: ["Modifica gruppo"]
      summary: Settare nome gruppo
      description: |-
        Se il gruppo ha già un nome, questo viene aggiornato con quello nuovo se il nome è differente dal precedente, 
        altrimenti viene settato il nuovo nome.
      operationId: setGroupName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "informatica 2024-2025"
                  description: il nome del gruppo
              description: lo schema contiene il nome del gruppo
      responses:
        "200":
          description: Nome gruppo settato.
        "400":
          description: Errore lato client.
        "500":
          description: Errore lato server.
  /wasachat/{groupid}/impostazioni/immaginegruppo:  
    parameters:
    - name: groupid
      in: path
      required: true
      description: è l'id del gruppo
      schema:
        type: number
        example: 2
    put:
      tags: ["Modifica gruppo"]
      summary: Settare foto gruppo
      description: |-
        Se il gruppo ha già una foto profilo, questa viene aggiornata con quella nuova fornita, altrimenti viene settata la nuova foto.
      operationId: setGroupPhoto
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
                  description: La nuova foto del gruppo in formato binario.
              description: lo schema contiene il campo foto
      responses:
        "200":
          description: Foto gruppo settata.
        "400":
          description: Errore lato client.
        "500":
          description: Errore lato server.